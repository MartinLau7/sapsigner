//
//   Generated by https://github.com/blacktop/ipsw (Version: , BuildCommit: )
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.4, SDK: 14.4, Tools: [ld (902.8), ld (854.1), ld (951.9)]
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.4, SDK: 17.4, Tools: [ld (902.8), ld (854.1), ld (951.9)]
//    - LC_SOURCE_VERSION: 7.4.38.1.3
//
#ifndef _AMSMetrics_h
#define _AMSMetrics_h

@import Foundation;

#include "AMSBagConsumer-Protocol.h"
#include "AMSBagProtocol-Protocol.h"
#include "AMSEngagement.h"
#include "AMSMetricsBagContract-Protocol.h"
#include "AMSMetricsDatabaseDataSource.h"
#include "AMSMetricsFlushOperation.h"
#include "AMSMetricsProtocol-Protocol.h"
#include "AMSTreatmentStore.h"
#include "os_unfair_lock_s.h"

@interface AMSMetrics : NSObject <AMSMetricsProtocol, AMSBagConsumer> {
    /* instance variables */
    NSMutableArray *_enqueuedOperations;
    AMSMetricsFlushOperation *_currentFlushOperation;
    struct os_unfair_lock_s _enqueuedOperationsLock;
    struct os_unfair_lock_s _flushModeLock;
    Class _flushTaskClass;
    struct os_unfair_lock_s _bagLock;
}

@property (retain) AMSMetricsDatabaseDataSource *databaseSource;
@property long long destination;
@property struct os_unfair_lock_s engagementLock;
@property signed char flushingDisabled;
@property signed char flushOnForeground;
@property (copy) id /* block */ flushIntervalBlock;
@property (retain) NSDate *flushIntervalStartTime;
@property (retain) AMSEngagement *engagement;
@property (retain) AMSTreatmentStore *treatmentStore;
@property (retain) id <AMSMetricsBagContract> bagContract;
@property (retain) id <AMSBagProtocol> bag;
@property (readonly) NSString *containerId;
@property (readonly) long long eventCount;
@property signed char flushTimerEnabled;
@property signed char includeMMeClientInfoAndDeviceHeaders;
@property long long maxBatchSize;
@property long long maxRequestCount;
@property unsigned long long metricsSigningFlavour;
@property signed char monitorsLifecycleEvents;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)bagSubProfile;
+ (id)bagSubProfileVersion;
+ (signed char)appAnalyticsAllowed;
+ (id)bagKeySet;
+ (id)createBagForSubProfile;
+ (signed char)diagnosticsSubmissionAllowed;
+ (signed char)disableBackgroundMetrics;
+ (signed char)flushDelayEnabled;
+ (signed char)flushTimerEnabled;
+ (id)internalInstanceUsingBag:(id)bag;
+ (signed char)recordAppAnalyticsForEvent:(id)event bugType:(id)type;
+ (id)serverTimeFromDate:(id)date;
+ (id)serverTimeFromTimeInterval:(double)interval;
+ (void)setDisableBackgroundMetrics:(signed char)metrics;
+ (void)setFlushDelayEnabled:(signed char)enabled;
+ (void)setFlushTimerEnabled:(signed char)enabled;
+ (id)sharedTimerQueue;
+ (double)timeIntervalFromServerTime:(id)time;

/* instance methods */
- (void)dealloc;
- (void)cancel;
- (void)enqueueEvent:(id)event;
- (id)flush;
- (id)flushEvents:(id)events;
- (void)_applicationWillEnterForeground;
- (signed char)_scheduledFlushAllowedForStyle:(long long)style;
- (void)_beginFlushIntervalWithStyle:(long long)style events:(id)events;
- (id)_determineFlushStrategyWithDataSource:(id)source topic:(id)topic;
- (id)_enqueueFigaroEvents:(id)events;
- (id)_flushDataSource:(id)source topic:(id)topic;
- (void)_flushIntervalInvalidate;
- (double)_flushIntervalWithConfiguration:(id)configuration forEvents:(id)events;
- (void)_flushTimerEnabledChanged;
- (void)_handleFlushIntervalWithStyle:(long long)style;
- (id)_modifiedEvents:(id)events;
- (void)_processOperationQueue;
- (void)dropEvents;
- (id)enqueueAsyncEvents:(id)events;
- (void)enqueueEvents:(id)events;
- (id)flushTopic:(id)topic;
- (id)initWithContainerID:(id)id bag:(id)bag;
- (id)initWithContainerID:(id)id bag:(id)bag flushTaskClass:(Class)_class;
- (id)initWithContainerId:(id)id bagContract:(id)contract;
- (id)promiseForEnqueueingEvents:(id)events;

@end

#endif /* _AMSMetrics_h */
