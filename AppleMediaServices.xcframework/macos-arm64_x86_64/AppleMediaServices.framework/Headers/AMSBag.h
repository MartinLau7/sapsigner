//
//   Generated by https://github.com/blacktop/ipsw (Version: , BuildCommit: )
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.4, SDK: 14.4, Tools: [ld (902.8), ld (854.1), ld (951.9)]
//    - LC_BUILD_VERSION:  Platform: macCatalyst, MinOS: 17.4, SDK: 17.4, Tools: [ld (902.8), ld (854.1), ld (951.9)]
//    - LC_SOURCE_VERSION: 7.4.38.1.3
//
#ifndef _AMSBag_h
#define _AMSBag_h

@import Foundation;

#include "AMSBagCachedValueUpdateHandlers.h"
#include "AMSBagDataSourceProtocol-Protocol.h"
#include "AMSBagProtocol-Protocol.h"
#include "AMSBagUnderlyingData.h"
#include "AMSBagUnderlyingDataPersistence.h"
#include "AMSProcessInfo.h"
#include "os_unfair_lock_s.h"

@protocol OS_dispatch_queue;

@interface AMSBag : NSObject <AMSBagProtocol>

@property (readonly) NSObject<OS_dispatch_queue> *changeNotificationQueue;
@property (readonly) NSObject<OS_dispatch_queue> *persistenceQueue;
@property (readonly) AMSBagUnderlyingDataPersistence *persistence;
@property (retain) AMSBagUnderlyingData *temporaryPreloadedBagData;
@property signed char persistenceAPIWasCalled;
@property struct os_unfair_lock_s updateHandlerConsistencyLock;
@property (readonly) signed char persistenceIsEnabled;
@property (retain) id <AMSBagDataSourceProtocol> dataSource;
@property (copy) AMSProcessInfo *processInfo;
@property (readonly) AMSBagCachedValueUpdateHandlers *updateHandlers;
@property (readonly) NSString *descriptionExtended;
@property (readonly) signed char expired;
@property (readonly) NSDate *expirationDate;
@property (readonly, copy) NSString *profile;
@property (readonly, copy) NSString *profileVersion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)bagForProfile:(id)profile profileVersion:(id)version;
+ (id)_bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info accountProvider:(id)provider;
+ (id)bagCache;
+ (id)bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info;
+ (id)bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info account:(id)account;
+ (void)resetBagCache;
+ (id)sharedPersistenceQueue;
+ (id)sharedPersistenceWithDefaultDirectory;
+ (unsigned long long)uninitializedToken;

/* instance methods */
- (id)URLForKey:(id)key;
- (id)arrayForKey:(id)key;
- (id)boolForKey:(id)key;
- (id)dictionaryForKey:(id)key;
- (id)stringForKey:(id)key;
- (id)integerForKey:(id)key;
- (id)doubleForKey:(id)key;
- (signed char)isLoaded;
- (id)initWithDataSource:(id)source;
- (signed char)isExpired;
- (id)URLForKey:(id)key account:(id)account;
- (id)URLFromURLString:(id)urlstring;
- (id)URLFromURLString:(id)urlstring account:(id)account;
- (id)_availableValuesFromCachedData:(id)data keys:(id)keys partialIdentifier:(id)identifier expirationDate:(id)date updateHandler:(id /* block */)handler outToken:(unsigned long long *)token;
- (id)_availableValuesFromPersistedBagData:(id)data error:(id)error keys:(id)keys partialIdentifier:(id)identifier updateHandler:(id /* block */)handler outToken:(unsigned long long *)token;
- (void)_configureDataSourceHandlers;
- (id)_initWithDataSource:(id)source persistence:(id)persistence persistenceQueue:(id)queue updateHandlers:(id)handlers shouldConfigureDataSourceHandlers:(signed char)handlers;
- (void)_loadAndPersistBag;
- (void)_persistBagDictionary:(id)dictionary withIdentifier:(id)identifier partialIdentifier:(id)identifier expirationDate:(id)date onlyIfPreExisting:(signed char)existing;
- (id)_temporaryDictionary;
- (id)cachedValuesForKeys:(id)keys observationToken:(unsigned long long *)token updateHandler:(id /* block */)handler;
- (void)createSnapshotWithCompletion:(id /* block */)completion;
- (id)initWithDataSource:(id)source persistenceDirectoryURL:(id)url persistenceQueue:(id)queue changeHandlerQueue:(id)queue shouldConfigureDataSourceHandlers:(signed char)handlers;
- (id)initWithDataSource:(id)source shouldConfigureDataSourceHandlers:(signed char)handlers;
- (void)removeObserverWithToken:(unsigned long long)token;
- (void)setDefaultValue:(id)value forKey:(id)key;
- (void)waitUntilPersistenceWorkComplete;

@end

#endif /* _AMSBag_h */
